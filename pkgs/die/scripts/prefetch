#!/usr/bin/env python3

import os
import sys
import time
import hashlib
import subprocess


where = sys.argv[1]


try:
   os.makedirs(where)
except OSError:
    pass


def sync():
    os.system('sync')


def fetch(u, where):
    log(f'fetch {u} into {where}')
    subprocess.check_call(['wget', '--no-check-certificate', '-O', where, u])


def safe_fetch(u, where):
    fetch(u, where + '.tmp')
    sync()
    os.rename(where + '.tmp', where)
    sync()


def log(s):
    print(s, file=sys.stderr)


def prefetch_url(u):
    log(f'process {u}')

    name = hashlib.sha256(u.encode()).hexdigest()
    path = os.path.join(where, name)

    if not os.path.isfile(path):
        safe_fetch(u, path)

    with open(path, 'rb') as f:
        data = f.read()

    sha = hashlib.sha256(data).hexdigest()
    rpath = os.path.join(where, sha)

    log(f'{u} sha is {sha}')

    if not os.path.isfile(rpath):
        log(f'create symlink {rpath}')

        try:
            os.unlink(rpath)
        except FileNotFoundError:
            pass

        os.symlink(name, rpath)
        sync()


for u in open(os.environ['IX_PKGS_ROOT'] + '/pkgs/die/scripts/urls.txt').read().strip().split():
    try:
        prefetch_url(u)
    except Exception as e:
        log(f'can not fetch {u}: {e}')
        time.sleep(1)
